---
title: "Data Visualization"
institute: "STAT 20 UC Berkeley"
logo: "images/stat20-hex.png"
format: 
  revealjs:
    theme: "../../../assets/stat20.scss"
    highlight-style: breezedark
    slide-number: true
    incremental: true
    menu: false
    title-slide-attributes:
      data-background-image: "images/hex-background.png"
      data-background-size: cover  
    progress: false
execute:
  freeze: auto
---
# First Things First

## First Things First

-   Course schedule/syllabus updated

-   A note on `&` and `|`

-   *3 Tutorials* post on Ed

-   Office hours being finalized: see course website

. . .

# Recap

## Recap and Moving Forward

-   Lecture 4: Summaries of Numerical Data, Measures of Center

-   Lecture 5: Summaries of Categorical Data, Measures of Spread, Shapes of Distributions

-   Yesterday and Today: Lecture 4-5 Exercises, Data Visualization

. . .

# Data Visualization

. . .

## Data Visualization with `ggplot()`

-   We will be working this semester with `ggplot()!`

    -   A function in the `ggplot2` package within the `tidyverse` library

    -   The self-proclaimed "Grammar of Graphics"

-   `ggplot()` works in *layers*.

. . .

## Layering graphics with `ggplot()`

-   Let's consider the boxplot we made in Lecture 4 with the `NBA` data.

1.  **Data**

    -   `ggplot(NBA)`

2.  Data + **Geometry** **(type of plot)**

    -   `ggplot(NBA) + geom_boxplot()`

3.  Data + Geometry + **Aesthetic Mapping**

    -   `ggplot(NBA) + geom_boxplot(mapping = aes(x = Age))`

. . .

## Layering graphics with `ggplot()`

1.  Data + Geometry + Aesthetic Mapping + **Settings**

    -   `ggplot(NBA) + geom_boxplot(mapping = aes(x = Age), color = "red", fill = "black")`

. . .

1.  Data + Geometry + Aesthetic Mapping + Settings + **Labels and Title**

    -   `ggplot(NBA) + geom_boxplot(mapping = aes(x = Age), color = "red", fill = "black") + xlab("Age") + ggtitle("Ages of NBA Players, 2021-22 Season)`

. . .

## Definitions of `ggplot()` jargon

-   **Aesthetic Mapping**: Anything having to do with mapping **variables** to places on the graphic. This includes:

    -   Which variables go on the horizontal (and vertical if needed) axes

    -   Which variables the plot is filled or colored by

-   **Settings**: Anything not having to do with mapping **variables**. This includes:

    -   The `color` or `fill` of the bars/points/boxes

    -   The position of bars

. . .

## Definitions of `ggplot()` jargon

-   **Geometry**: The type of plot. Also called a `geom`.

    -   Example: the box plot has the geometry `geom_boxplot()`.

    -   Example: the histogram has the geometry `geom_histogram()`.

. . .

## Definitions of `ggplot()` jargon

-   `color`: *outlines* points/bars with a specified color

-   `fill`: *fills in* points/bars with a specified color

-   R has a set list of colors to work with that can be found [here](http://www.stat.columbia.edu/~tzheng/files/Rcolor.pdf).

. . .

## 

![](images/steph-and-klay.jpg)

::: footer [Image Linked here](https://www.goldenstateofmind.com/2022/6/16/23172186/steph-curry-is-2022-finals-mvp) :::

. . .

## Data Visualization

-   The Golden State Warriors just won their fourth NBA championship in seven years!

-   In honor of this accomplishment, we will be using a dataset from the 2021-2022 NBA season which compiles player statistics per game throughout the week.

-   The unit of observation is a player.

-   The dataset comes from *Basketball Reference* and can be found [here](https://www.basketball-reference.com/leagues/NBA_2022_per_game.html).

## Data Visualization

-   Now, some basketball terminology:

    -   Field Goals: 2-point or 3-point shots.

    -   Field Goal Percentage: the percentage of field goals a player makes.

    -   *Effective Field Goal Percentage*: a modification of Field Goal Percentage which weights 3-point shots more heavily than 2-point shots as opposed to equally.

    -   Players like the Warriors' Curry have pushed the 3-point shot to the forefront of the game

. . .

## Data Visualization

-   Last class:

. . .

> Sketch a plot of Field Goals Attempted (FGA) vs. Effective Field Goal Percentage (`eFG%`). Identify your aesthetic mapping and geometry.

. . .

## Data Visualization - `geom_point()`

> Sketch a plot of Field Goals Attempted (FGA) vs. Effective Field Goal Percentage (`eFG%`). Identify your aesthetic mapping and geometry.

. . .

```{r read_in_data, message = FALSE, echo = FALSE}
library(rvest)
library(tidyverse)

url <- "https://www.basketball-reference.com/leagues/NBA_2022_per_game.html#per_game_stats"

NBA <- (read_html(url) %>% html_table())[[1]] %>% filter(Tm != "Tm")

```

. . .

```{r no_duplicated, echo = FALSE}
Mult_Teams <- NBA %>% filter(Tm == "TOT")

Mult_Team_Player_Vec <- unname(unlist(select(Mult_Teams, Player)))

One_Team <- NBA %>% distinct(Player, .keep_all = TRUE) %>% 
  filter(!(Player %in% Mult_Team_Player_Vec))

New_NBA <- bind_rows(One_Team, Mult_Teams)

```

```{r, the_plot, echo = FALSE}
New_NBA %>% mutate(FGA = as.numeric(FGA), `eFG%`= as.numeric(`eFG%`)) %>%
  filter(`eFG%` > 0) %>%
 ggplot() + geom_point(mapping = aes(x = FGA, 
                                           y = `eFG%`)) +
  theme_light() + xlab("FGA") + 
  ylab("eFG%") +
  ggtitle("Field Goals Attempted (FGA) vs. 
          Effective Field Goal Percentage (eFG%)", 
          subtitle = "per game, 2021-2022 NBA Players")

```

. . .

## 

![](images/surveyresultsemail.jpg)

. . .

## Data Visualization - `geom_point()`

-   In the People's Park survey, students expressed their level of support/opposition:

    -   With little to no/surface-level knowledge of the project **(Q18)**

    -   With complete knowledge of the project **(Q21)**

-   Possible responses ranged from 1 to 7 on a *Likert Scale*

    -   1 being the strongest support, 7 being the strongest opposition

-   **Remember:** the Likert Scale *can* be seen as numerical.

. . .

## Data Visualization - `geom_point()`

-   Exercise:

. . .

> Sketch a scatter plot of participant attitudes "before" (Q18) vs. their attitudes "after" (Q21) more knowledge was given to them. Identify your aesthetic mapping and geometry.

. . .

## Data Visualization - `geom_point()` {.scrollable}

> Sketch a scatter plot of participant attitudes "before" (Q18) vs. their attitudes "after" (Q21) more knowledge was given to them. Identify your aesthetic mapping and geometry.

. . .

```{r message = FALSE, echo = FALSE}
library(stat20data)
library(tidyverse)
data(ppk)

ppk %>% drop_na(Q18, Q21) %>% 
  ggplot() + geom_point(mapping = aes(x = Q18, y = Q21)) + theme_light() +
  xlab("\"Before\" Score ") + ylab("\"After\" Score ") +
  ggtitle("UC Students' Attitudes about the People's Park Project, 2021 Survey", 
          subtitle = "Opposition increases with score")
```

. . .

## Data Visualization - `geom_point()`

```{r message = FALSE, echo = FALSE}
library(stat20data)
library(tidyverse)
data(ppk)

ppk %>% drop_na(Q18, Q21) %>% 
  ggplot() + geom_point(mapping = aes(x = Q18, y = Q21)) + theme_light(base_size = 20) +
  xlab("\"Before\" Score ") + ylab("\"After\" Score ") +
  ggtitle("UCB Students' Attitudes about the People's Park Project, 2021 Survey", 
          subtitle = "Opposition increases with score")
```

. . .

-   We know there are more than 44 observations in this dataset!

-   Therefore, there have to be duplicate points which are not being shown

    -   The phenomenon we have here is called "**overplotting**."

. . .

## Data Visualization - `geom_jitter()`

-   We can fix the problem by using `geom_jitter()`.

. . .

```{r, echo = TRUE, eval = FALSE}
ppk %>% drop_na(Q18, Q21) %>% 
  ggplot() + 
  
  geom_jitter(mapping = aes(x = Q18, y = Q21)) + #this fixes the problem
  
  theme_light(base_size = 20) +
  xlab("\"Before\" Score ") + ylab("\"After\" Score ") +
  ggtitle("UCB Students' Attitudes about the People's Park Project, 2021 Survey", 
          subtitle = "Opposition increases with score")
```

. . .

## Data Visualization - `geom_jitter()`

```{r, echo = TRUE}
ppk %>% drop_na(Q18, Q21) %>% 
  ggplot() + geom_jitter(mapping = aes(x = Q18, y = Q21)) +
  theme_light(base_size = 20) +
  xlab("\"Before\" Score ") + ylab("\"After\" Score ") +
  ggtitle("UCB Students' Attitudes about the People's Park Project, 2021 Survey", 
          subtitle = "Opposition increases with score")
```

. . .

# `facet_wrap()`

. . .

## Data Visualization - `facet_wrap()`

-   Useful for splitting a plot into subplots based on the levels of a categorical variable(s). Put this function after your `geom` of choice when layering your plot.

-   **Format**: `facet_wrap(vars(VAR1, VAR2, ...))`

-   Generally we will facet with one or two variables.

. . .

## Data Visualization - `facet_wrap()`

-   Example:

. . .

> Plot Field Goals Attempted (FGA) vs. Effective Field Goal Percentage (`eFG%`), faceted by position.

. . .

## Data Visualization - `facet_wrap()`

> Plot Field Goals Attempted (FGA) vs. Effective Field Goal Percentage (`eFG%`), faceted by position.

. . .

```{r facet_plot}
New_NBA %>% mutate(FGA = as.numeric(FGA), `eFG%`= as.numeric(`eFG%`)) %>%
  filter(`eFG%` > 0) %>% 
  filter(Pos %in% c("C", "PF", "PG", "SF", "SG"))%>%
 ggplot() + geom_point(mapping = aes(x = FGA, 
                                           y = `eFG%`)) +
  theme_light() + xlab("FGA") + 
  ylab("eFG%") + facet_wrap(vars(Pos)) + 
  ggtitle("Field Goals Attempted (FGA) vs. 
          Effective Field Goal Percentage (eFG%)", 
          subtitle = "per game, 2021-2022 NBA Players")

```

. . .

# Logical Variables

## Logical Variables

-   Variables that either take values `TRUE` or `FALSE`

-   Often the result of useful mutations

-   Will be especially useful in coming weeks

## Math with Logical Variables

-   Whenever *a mathematical expression is evaluated* on a logical value:

    -   `TRUE` values correspond to 1 and

    -   `FALSE` values correspond to 0.

-   This is very handy for calculating the proportion of `TRUE` or `FALSE` observations of a logical variable. This calculation actually amounts to taking the **mean** of the observations (why?)

. . .

## Math with Logical Variables - Exercises

-   Here are some practice exercises to help your understanding.

-   What is:

    -   `TRUE * FALSE`

    -   The mean of: `TRUE`, `FALSE`

    -   The median of: `FALSE`, `TRUE`, `TRUE`

    -   The median of: `FALSE`, `TRUE`, `TRUE`, TRUE\`

. . .

# Data Visualization

. . .

## Data Visualization with Logical Variables

-   Exercise:

. . .

> Make two new columns: one which takes the value `TRUE` for players under or at age 25, and another which the value `TRUE` for players who play more than 20 minutes per game (MP). Then, add the two columns together and create a bar chart with the values of the summed column.

. . .

## Data Visualization with Logical Variables

```{r new_columns, echo = FALSE}
New_NBA %>% mutate(Age = as.numeric(Age), 
                   MP = as.numeric(MP)) %>%
  mutate(Young = Age <= 25) %>% mutate(Active = MP > 20) %>%
  mutate(Young_And_Active = Young + Active) %>%
  
  ggplot() + 
  geom_bar(mapping = aes(x = factor(Young_And_Active)),
           color = "red", fill = "black") +
  xlab("Youth + Activity Score") + 
  ylab("Count") + ggtitle("NBA Players by Youth and Activity", subtitle = "A score of 2 indicates a player is at most 25 years old and plays more than 20 minutes") + theme_light() 

```

. . .

# Break

# Exercises

## Exercises - Data Visualization

-   Today's exercises will cover Data Visualization with `ggplot()`.

-   They can be found on the revamped [Lecture Code and Supplements Thread]().

## Exercises - Data Visualization

-   At this point, we spent class time working on the exercises and went over the answers as a class.

# Moving forward

## The Four Types of Claim

1.  Descriptive (done!)

2.  **Generalizations**

3.  **Causal**

4.  **Predictive**

. . . 

-   Next week we will focus on **Generalizations**.

. . .

## Assessments

-   Quiz 1 next week (**Original Thurs 6:00p on Gradescope**)

    -   25 minutes to complete once started
    
    -   Will cover weeks 1, 2 and 3 up to next Wednesday
  
    -   Original and a retake

-   Midterm the week after (**Thursday, Jul 14 in-class**)

    -   Will cover weeks 1-3 material

    -   There will be three review days before the exam

. . .

# End of Lecture 7
